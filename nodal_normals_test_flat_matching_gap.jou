# This script meshes a unit square which is split down the middle by
# an infinitely thin gap with a conforming mesh (the nodes are shared)
# on both sides.

# cd '/Users/petejw/code/peterson_git/cubit/nodal_normals'
# play "nodal_normals_test_flat_matching_gap.jou"

# Clear any existing model
reset

# Create outer part
create brick width 1 depth 1 height 1

# Cut out a chunk from the center.
webcut body all plane xplane offset -0.005
webcut body all plane xplane offset +0.005

# Remove middle body
delete body 3

# Note: In Cubit's numbering, body 2 is actually on the left!
# block 1 = left
# block 2 = right
block 1 surf 15
block 2 surf 20

# Give the blocks names for easier identification.
block 1 name 'left'
block 2 name 'right'

# left_sideset is on the left side of the contact interface, right_sideset is on the right.
sideset 1 curve 23
sideset 1 name 'left_sideset'
sideset 2 curve 29
sideset 2 name 'right_sideset'

# We will probably want other sidesets for specifying BCs too. We
# number everything counter clockwise starting from the bottom.
sideset 3 curve 28
sideset 3 name 'bottom_left'
sideset 4 curve 36
sideset 4 name 'bottom_right'
sideset 5 curve 1
sideset 5 name 'outside_right'
sideset 6 curve 35
sideset 6 name 'top_right'
sideset 7 curve 26
sideset 7 name 'top_left'
sideset 8 curve 3
sideset 8 name 'outside_left'

# Set the mesh interval along the contact surface. Setting no
# interval results in 14 element faces on the boundary. 20 seems to
# generate something a little better looking.
curve 23 interval 20
curve 29 interval 20

# Mesh the part on the left with triangles.
surf 15 scheme TriDelaunay
mesh surf 15

# Mesh the part on the right with quads.
surf 20 scheme Map
mesh surf 20

# Set the geometric element type to use in each block.
block 1 element type TRI3
block 2 element type QUAD4

# Write to file.
export mesh "nodal_normals_test_flat_matching_gap.e" dimension 2 block 1 2 overwrite

# Local Variables:
# mode: shell-script
# End:
